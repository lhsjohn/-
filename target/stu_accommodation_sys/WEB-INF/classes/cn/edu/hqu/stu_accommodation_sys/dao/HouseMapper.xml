<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.hqu.stu_accommodation_sys.dao.HouseMapper">
  <resultMap id="BaseResultMap" type="cn.edu.hqu.stu_accommodation_sys.pojo.House">
    <id column="house_id" jdbcType="VARCHAR" property="houseId" />
    <result column="house_address" jdbcType="VARCHAR" property="houseAddress" />
    <result column="house_type" jdbcType="VARCHAR" property="houseType" />
    <result column="house_capacity" jdbcType="INTEGER" property="houseCapacity" />
    <result column="house_square" jdbcType="DOUBLE" property="houseSquare" />
    <result column="house_cost" jdbcType="DOUBLE" property="houseCost" />
    <result column="house_hostId" jdbcType="VARCHAR" property="houseHostid" />
    <result column="house_hostname" jdbcType="VARCHAR" property="houseHostname" />
    <result column="house_desc" jdbcType="VARCHAR" property="houseDesc" />
    <result column="house_state" jdbcType="VARCHAR" property="houseState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    house_id, house_address, house_type, house_capacity, house_square, house_cost, house_hostId, 
    house_hostname, house_desc, house_state
  </sql>
  <select id="selectByExample" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.HouseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from house
    where house_id = #{houseId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from house
    where house_id = #{houseId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.HouseExample">
    delete from house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.House">
    insert into house (house_id, house_address, house_type, 
      house_capacity, house_square, house_cost, 
      house_hostId, house_hostname, house_desc, 
      house_state)
    values (#{houseId,jdbcType=VARCHAR}, #{houseAddress,jdbcType=VARCHAR}, #{houseType,jdbcType=VARCHAR}, 
      #{houseCapacity,jdbcType=INTEGER}, #{houseSquare,jdbcType=DOUBLE}, #{houseCost,jdbcType=DOUBLE}, 
      #{houseHostid,jdbcType=VARCHAR}, #{houseHostname,jdbcType=VARCHAR}, #{houseDesc,jdbcType=VARCHAR}, 
      #{houseState,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.House">
    insert into house
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="houseId != null">
        house_id,
      </if>
      <if test="houseAddress != null">
        house_address,
      </if>
      <if test="houseType != null">
        house_type,
      </if>
      <if test="houseCapacity != null">
        house_capacity,
      </if>
      <if test="houseSquare != null">
        house_square,
      </if>
      <if test="houseCost != null">
        house_cost,
      </if>
      <if test="houseHostid != null">
        house_hostId,
      </if>
      <if test="houseHostname != null">
        house_hostname,
      </if>
      <if test="houseDesc != null">
        house_desc,
      </if>
      <if test="houseState != null">
        house_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="houseId != null">
        #{houseId,jdbcType=VARCHAR},
      </if>
      <if test="houseAddress != null">
        #{houseAddress,jdbcType=VARCHAR},
      </if>
      <if test="houseType != null">
        #{houseType,jdbcType=VARCHAR},
      </if>
      <if test="houseCapacity != null">
        #{houseCapacity,jdbcType=INTEGER},
      </if>
      <if test="houseSquare != null">
        #{houseSquare,jdbcType=DOUBLE},
      </if>
      <if test="houseCost != null">
        #{houseCost,jdbcType=DOUBLE},
      </if>
      <if test="houseHostid != null">
        #{houseHostid,jdbcType=VARCHAR},
      </if>
      <if test="houseHostname != null">
        #{houseHostname,jdbcType=VARCHAR},
      </if>
      <if test="houseDesc != null">
        #{houseDesc,jdbcType=VARCHAR},
      </if>
      <if test="houseState != null">
        #{houseState,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.HouseExample" resultType="java.lang.Long">
    select count(*) from house
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update house
    <set>
      <if test="record.houseId != null">
        house_id = #{record.houseId,jdbcType=VARCHAR},
      </if>
      <if test="record.houseAddress != null">
        house_address = #{record.houseAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.houseType != null">
        house_type = #{record.houseType,jdbcType=VARCHAR},
      </if>
      <if test="record.houseCapacity != null">
        house_capacity = #{record.houseCapacity,jdbcType=INTEGER},
      </if>
      <if test="record.houseSquare != null">
        house_square = #{record.houseSquare,jdbcType=DOUBLE},
      </if>
      <if test="record.houseCost != null">
        house_cost = #{record.houseCost,jdbcType=DOUBLE},
      </if>
      <if test="record.houseHostid != null">
        house_hostId = #{record.houseHostid,jdbcType=VARCHAR},
      </if>
      <if test="record.houseHostname != null">
        house_hostname = #{record.houseHostname,jdbcType=VARCHAR},
      </if>
      <if test="record.houseDesc != null">
        house_desc = #{record.houseDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.houseState != null">
        house_state = #{record.houseState,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update house
    set house_id = #{record.houseId,jdbcType=VARCHAR},
      house_address = #{record.houseAddress,jdbcType=VARCHAR},
      house_type = #{record.houseType,jdbcType=VARCHAR},
      house_capacity = #{record.houseCapacity,jdbcType=INTEGER},
      house_square = #{record.houseSquare,jdbcType=DOUBLE},
      house_cost = #{record.houseCost,jdbcType=DOUBLE},
      house_hostId = #{record.houseHostid,jdbcType=VARCHAR},
      house_hostname = #{record.houseHostname,jdbcType=VARCHAR},
      house_desc = #{record.houseDesc,jdbcType=VARCHAR},
      house_state = #{record.houseState,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.House">
    update house
    <set>
      <if test="houseAddress != null">
        house_address = #{houseAddress,jdbcType=VARCHAR},
      </if>
      <if test="houseType != null">
        house_type = #{houseType,jdbcType=VARCHAR},
      </if>
      <if test="houseCapacity != null">
        house_capacity = #{houseCapacity,jdbcType=INTEGER},
      </if>
      <if test="houseSquare != null">
        house_square = #{houseSquare,jdbcType=DOUBLE},
      </if>
      <if test="houseCost != null">
        house_cost = #{houseCost,jdbcType=DOUBLE},
      </if>
      <if test="houseHostid != null">
        house_hostId = #{houseHostid,jdbcType=VARCHAR},
      </if>
      <if test="houseHostname != null">
        house_hostname = #{houseHostname,jdbcType=VARCHAR},
      </if>
      <if test="houseDesc != null">
        house_desc = #{houseDesc,jdbcType=VARCHAR},
      </if>
      <if test="houseState != null">
        house_state = #{houseState,jdbcType=VARCHAR},
      </if>
    </set>
    where house_id = #{houseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.House">
    update house
    set house_address = #{houseAddress,jdbcType=VARCHAR},
      house_type = #{houseType,jdbcType=VARCHAR},
      house_capacity = #{houseCapacity,jdbcType=INTEGER},
      house_square = #{houseSquare,jdbcType=DOUBLE},
      house_cost = #{houseCost,jdbcType=DOUBLE},
      house_hostId = #{houseHostid,jdbcType=VARCHAR},
      house_hostname = #{houseHostname,jdbcType=VARCHAR},
      house_desc = #{houseDesc,jdbcType=VARCHAR},
      house_state = #{houseState,jdbcType=VARCHAR}
    where house_id = #{houseId,jdbcType=VARCHAR}
  </update>
</mapper>