<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.hqu.stu_accommodation_sys.dao.LandlordMapper">
  <resultMap id="BaseResultMap" type="cn.edu.hqu.stu_accommodation_sys.pojo.Landlord">
    <id column="landlord_id" jdbcType="VARCHAR" property="landlordId" />
    <result column="landlord_username" jdbcType="VARCHAR" property="landlordUsername" />
    <result column="landlord_password" jdbcType="VARCHAR" property="landlordPassword" />
    <result column="landlord_idcard" jdbcType="VARCHAR" property="landlordIdcard" />
    <result column="landlord_name" jdbcType="VARCHAR" property="landlordName" />
    <result column="landlord_email" jdbcType="VARCHAR" property="landlordEmail" />
    <result column="landlord_phone" jdbcType="VARCHAR" property="landlordPhone" />
    <result column="landlord_gender" jdbcType="VARCHAR" property="landlordGender" />
    <result column="landlord_info" jdbcType="VARCHAR" property="landlordInfo" />
    <result column="landlord_age" jdbcType="INTEGER" property="landlordAge" />
    <result column="landlord_account" jdbcType="DOUBLE" property="landlordAccount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    landlord_id, landlord_username, landlord_password, landlord_idcard, landlord_name, 
    landlord_email, landlord_phone, landlord_gender, landlord_info, landlord_age, landlord_account
  </sql>
  <select id="selectByExample" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.LandlordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from landlord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from landlord
    where landlord_id = #{landlordId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from landlord
    where landlord_id = #{landlordId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.LandlordExample">
    delete from landlord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.Landlord">
    insert into landlord (landlord_id, landlord_username, landlord_password, 
      landlord_idcard, landlord_name, landlord_email, 
      landlord_phone, landlord_gender, landlord_info, 
      landlord_age, landlord_account)
    values (#{landlordId,jdbcType=VARCHAR}, #{landlordUsername,jdbcType=VARCHAR}, #{landlordPassword,jdbcType=VARCHAR}, 
      #{landlordIdcard,jdbcType=VARCHAR}, #{landlordName,jdbcType=VARCHAR}, #{landlordEmail,jdbcType=VARCHAR}, 
      #{landlordPhone,jdbcType=VARCHAR}, #{landlordGender,jdbcType=VARCHAR}, #{landlordInfo,jdbcType=VARCHAR}, 
      #{landlordAge,jdbcType=INTEGER}, #{landlordAccount,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.Landlord">
    insert into landlord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="landlordId != null">
        landlord_id,
      </if>
      <if test="landlordUsername != null">
        landlord_username,
      </if>
      <if test="landlordPassword != null">
        landlord_password,
      </if>
      <if test="landlordIdcard != null">
        landlord_idcard,
      </if>
      <if test="landlordName != null">
        landlord_name,
      </if>
      <if test="landlordEmail != null">
        landlord_email,
      </if>
      <if test="landlordPhone != null">
        landlord_phone,
      </if>
      <if test="landlordGender != null">
        landlord_gender,
      </if>
      <if test="landlordInfo != null">
        landlord_info,
      </if>
      <if test="landlordAge != null">
        landlord_age,
      </if>
      <if test="landlordAccount != null">
        landlord_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="landlordId != null">
        #{landlordId,jdbcType=VARCHAR},
      </if>
      <if test="landlordUsername != null">
        #{landlordUsername,jdbcType=VARCHAR},
      </if>
      <if test="landlordPassword != null">
        #{landlordPassword,jdbcType=VARCHAR},
      </if>
      <if test="landlordIdcard != null">
        #{landlordIdcard,jdbcType=VARCHAR},
      </if>
      <if test="landlordName != null">
        #{landlordName,jdbcType=VARCHAR},
      </if>
      <if test="landlordEmail != null">
        #{landlordEmail,jdbcType=VARCHAR},
      </if>
      <if test="landlordPhone != null">
        #{landlordPhone,jdbcType=VARCHAR},
      </if>
      <if test="landlordGender != null">
        #{landlordGender,jdbcType=VARCHAR},
      </if>
      <if test="landlordInfo != null">
        #{landlordInfo,jdbcType=VARCHAR},
      </if>
      <if test="landlordAge != null">
        #{landlordAge,jdbcType=INTEGER},
      </if>
      <if test="landlordAccount != null">
        #{landlordAccount,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.LandlordExample" resultType="java.lang.Long">
    select count(*) from landlord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update landlord
    <set>
      <if test="record.landlordId != null">
        landlord_id = #{record.landlordId,jdbcType=VARCHAR},
      </if>
      <if test="record.landlordUsername != null">
        landlord_username = #{record.landlordUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.landlordPassword != null">
        landlord_password = #{record.landlordPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.landlordIdcard != null">
        landlord_idcard = #{record.landlordIdcard,jdbcType=VARCHAR},
      </if>
      <if test="record.landlordName != null">
        landlord_name = #{record.landlordName,jdbcType=VARCHAR},
      </if>
      <if test="record.landlordEmail != null">
        landlord_email = #{record.landlordEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.landlordPhone != null">
        landlord_phone = #{record.landlordPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.landlordGender != null">
        landlord_gender = #{record.landlordGender,jdbcType=VARCHAR},
      </if>
      <if test="record.landlordInfo != null">
        landlord_info = #{record.landlordInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.landlordAge != null">
        landlord_age = #{record.landlordAge,jdbcType=INTEGER},
      </if>
      <if test="record.landlordAccount != null">
        landlord_account = #{record.landlordAccount,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update landlord
    set landlord_id = #{record.landlordId,jdbcType=VARCHAR},
      landlord_username = #{record.landlordUsername,jdbcType=VARCHAR},
      landlord_password = #{record.landlordPassword,jdbcType=VARCHAR},
      landlord_idcard = #{record.landlordIdcard,jdbcType=VARCHAR},
      landlord_name = #{record.landlordName,jdbcType=VARCHAR},
      landlord_email = #{record.landlordEmail,jdbcType=VARCHAR},
      landlord_phone = #{record.landlordPhone,jdbcType=VARCHAR},
      landlord_gender = #{record.landlordGender,jdbcType=VARCHAR},
      landlord_info = #{record.landlordInfo,jdbcType=VARCHAR},
      landlord_age = #{record.landlordAge,jdbcType=INTEGER},
      landlord_account = #{record.landlordAccount,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.Landlord">
    update landlord
    <set>
      <if test="landlordUsername != null">
        landlord_username = #{landlordUsername,jdbcType=VARCHAR},
      </if>
      <if test="landlordPassword != null">
        landlord_password = #{landlordPassword,jdbcType=VARCHAR},
      </if>
      <if test="landlordIdcard != null">
        landlord_idcard = #{landlordIdcard,jdbcType=VARCHAR},
      </if>
      <if test="landlordName != null">
        landlord_name = #{landlordName,jdbcType=VARCHAR},
      </if>
      <if test="landlordEmail != null">
        landlord_email = #{landlordEmail,jdbcType=VARCHAR},
      </if>
      <if test="landlordPhone != null">
        landlord_phone = #{landlordPhone,jdbcType=VARCHAR},
      </if>
      <if test="landlordGender != null">
        landlord_gender = #{landlordGender,jdbcType=VARCHAR},
      </if>
      <if test="landlordInfo != null">
        landlord_info = #{landlordInfo,jdbcType=VARCHAR},
      </if>
      <if test="landlordAge != null">
        landlord_age = #{landlordAge,jdbcType=INTEGER},
      </if>
      <if test="landlordAccount != null">
        landlord_account = #{landlordAccount,jdbcType=DOUBLE},
      </if>
    </set>
    where landlord_id = #{landlordId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.hqu.stu_accommodation_sys.pojo.Landlord">
    update landlord
    set landlord_username = #{landlordUsername,jdbcType=VARCHAR},
      landlord_password = #{landlordPassword,jdbcType=VARCHAR},
      landlord_idcard = #{landlordIdcard,jdbcType=VARCHAR},
      landlord_name = #{landlordName,jdbcType=VARCHAR},
      landlord_email = #{landlordEmail,jdbcType=VARCHAR},
      landlord_phone = #{landlordPhone,jdbcType=VARCHAR},
      landlord_gender = #{landlordGender,jdbcType=VARCHAR},
      landlord_info = #{landlordInfo,jdbcType=VARCHAR},
      landlord_age = #{landlordAge,jdbcType=INTEGER},
      landlord_account = #{landlordAccount,jdbcType=DOUBLE}
    where landlord_id = #{landlordId,jdbcType=VARCHAR}
  </update>
</mapper>